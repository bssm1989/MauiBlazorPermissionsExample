@page "/"
@using MauiBlazorPermissionsExample.Services
@inject IStudentService StudentService
@using MauiBlazorPermissionsExample.Models
@using Syncfusion.Blazor.Calendars
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@using Syncfusion.Blazor.Inputs
@*<div id="MapViewer2" style="position: relative; width: 100%; z-index: 10; padding-bottom: 50px; height: 500px; "></div>*@




Welcome to your new app.
<input type="text" @ref=button1 @bind="value" @oninput="@((e) => { value=(string)e.Value;})" Placeholder="นามสกุล*" />
<input placeholder="Enter your text" @oninput="@onInput" @onchange="@onChange" />
<SfTextBox CssClass="e-outline" Placeholder="value*" FloatLabelType="@FloatLabelType.Auto" @bind-Value="content" />

<button class="btn btn-primary" @onclick="@(()=>IncrementCount(@button1))">Click me</button>
<button @ref=button2 class="btn btn-primary" @onclick="@(()=>IncrementCount1(@button2))">Click me</button>


<button class="btn btn-primary" @onclick="OnButtonClick">Call C# from JS</button>
<br />
<br />

<p>@content</p>
@*<SurveyPrompt Title="How is Blazor working for you?" />*@
@code{
    private static string content { get; set; }
    private ElementReference button1;
    private ElementReference button2;

    private int currentCount = 0;
    private string lastButtonClicked = "None";

    private async void IncrementCount(ElementReference element)
    {
        currentCount++;
        lastButtonClicked = "Button 1";
        await JSRuntime.InvokeVoidAsync("setElementText", element, "Button 1 was clicked");

    }
    private async void IncrementCount1(ElementReference element)
    {
        currentCount++;

        lastButtonClicked = "Button 2";
        await JSRuntime.InvokeVoidAsync("setElementText", element, "Button 2 was clicked");
    }
    protected override async Task OnInitializedAsync()
    {
        await StudentService.syncProvinceAsync();
    }

    private string? value { get; set; }
    private void onChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        value = (string)args.Value;
    }
    private void onInput(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        value = (string)args.Value;
    }
    [JSInvokable]
    //public static void JStoCSCall()
    //{
    //    content = new DateTime().ToString();
    //}

    // Invoked by button clicking and calls JavaScript function.
    private async Task OnButtonClick()
    {
        //("showAlert", "JS function called from .NET");
        await JSRuntime.InvokeAsync<object>("CStoJSCall");
    }
}
